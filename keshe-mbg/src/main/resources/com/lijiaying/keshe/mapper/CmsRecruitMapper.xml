<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qingmeng.qiuzhidi.mapper.CmsRecruitMapper">
  <resultMap id="BaseResultMap" type="com.qingmeng.qiuzhidi.model.CmsRecruit">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="recruit_name" jdbcType="VARCHAR" property="recruitName" />
    <result column="recruit_salary" jdbcType="VARCHAR" property="recruitSalary" />
    <result column="recruit_workspace" jdbcType="VARCHAR" property="recruitWorkspace" />
    <result column="release_date" jdbcType="TIMESTAMP" property="releaseDate" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="company_id" jdbcType="BIGINT" property="companyId" />
    <result column="is_close" jdbcType="INTEGER" property="isClose" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.qingmeng.qiuzhidi.model.CmsRecruit">
    <result column="job_description" jdbcType="LONGVARCHAR" property="jobDescription" />
    <result column="skill_required" jdbcType="LONGVARCHAR" property="skillRequired" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, recruit_name, recruit_salary, recruit_workspace, release_date, department, type, 
    company_id, is_close, is_delete
  </sql>
  <sql id="Blob_Column_List">
    job_description, skill_required
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.qingmeng.qiuzhidi.model.CmsRecruitExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cms_recruit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.qingmeng.qiuzhidi.model.CmsRecruitExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cms_recruit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cms_recruit
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from cms_recruit
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.qingmeng.qiuzhidi.model.CmsRecruitExample">
    delete from cms_recruit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qingmeng.qiuzhidi.model.CmsRecruit">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into cms_recruit (recruit_name, recruit_salary, recruit_workspace, 
      release_date, department, type, 
      company_id, is_close, is_delete, 
      job_description, skill_required)
    values (#{recruitName,jdbcType=VARCHAR}, #{recruitSalary,jdbcType=VARCHAR}, #{recruitWorkspace,jdbcType=VARCHAR}, 
      #{releaseDate,jdbcType=TIMESTAMP}, #{department,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{companyId,jdbcType=BIGINT}, #{isClose,jdbcType=INTEGER}, #{isDelete,jdbcType=INTEGER}, 
      #{jobDescription,jdbcType=LONGVARCHAR}, #{skillRequired,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qingmeng.qiuzhidi.model.CmsRecruit">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into cms_recruit
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="recruitName != null">
        recruit_name,
      </if>
      <if test="recruitSalary != null">
        recruit_salary,
      </if>
      <if test="recruitWorkspace != null">
        recruit_workspace,
      </if>
      <if test="releaseDate != null">
        release_date,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="isClose != null">
        is_close,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="jobDescription != null">
        job_description,
      </if>
      <if test="skillRequired != null">
        skill_required,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="recruitName != null">
        #{recruitName,jdbcType=VARCHAR},
      </if>
      <if test="recruitSalary != null">
        #{recruitSalary,jdbcType=VARCHAR},
      </if>
      <if test="recruitWorkspace != null">
        #{recruitWorkspace,jdbcType=VARCHAR},
      </if>
      <if test="releaseDate != null">
        #{releaseDate,jdbcType=TIMESTAMP},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=BIGINT},
      </if>
      <if test="isClose != null">
        #{isClose,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="jobDescription != null">
        #{jobDescription,jdbcType=LONGVARCHAR},
      </if>
      <if test="skillRequired != null">
        #{skillRequired,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qingmeng.qiuzhidi.model.CmsRecruitExample" resultType="java.lang.Long">
    select count(*) from cms_recruit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cms_recruit
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.recruitName != null">
        recruit_name = #{record.recruitName,jdbcType=VARCHAR},
      </if>
      <if test="record.recruitSalary != null">
        recruit_salary = #{record.recruitSalary,jdbcType=VARCHAR},
      </if>
      <if test="record.recruitWorkspace != null">
        recruit_workspace = #{record.recruitWorkspace,jdbcType=VARCHAR},
      </if>
      <if test="record.releaseDate != null">
        release_date = #{record.releaseDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=BIGINT},
      </if>
      <if test="record.isClose != null">
        is_close = #{record.isClose,jdbcType=INTEGER},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=INTEGER},
      </if>
      <if test="record.jobDescription != null">
        job_description = #{record.jobDescription,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.skillRequired != null">
        skill_required = #{record.skillRequired,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update cms_recruit
    set id = #{record.id,jdbcType=BIGINT},
      recruit_name = #{record.recruitName,jdbcType=VARCHAR},
      recruit_salary = #{record.recruitSalary,jdbcType=VARCHAR},
      recruit_workspace = #{record.recruitWorkspace,jdbcType=VARCHAR},
      release_date = #{record.releaseDate,jdbcType=TIMESTAMP},
      department = #{record.department,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      company_id = #{record.companyId,jdbcType=BIGINT},
      is_close = #{record.isClose,jdbcType=INTEGER},
      is_delete = #{record.isDelete,jdbcType=INTEGER},
      job_description = #{record.jobDescription,jdbcType=LONGVARCHAR},
      skill_required = #{record.skillRequired,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cms_recruit
    set id = #{record.id,jdbcType=BIGINT},
      recruit_name = #{record.recruitName,jdbcType=VARCHAR},
      recruit_salary = #{record.recruitSalary,jdbcType=VARCHAR},
      recruit_workspace = #{record.recruitWorkspace,jdbcType=VARCHAR},
      release_date = #{record.releaseDate,jdbcType=TIMESTAMP},
      department = #{record.department,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      company_id = #{record.companyId,jdbcType=BIGINT},
      is_close = #{record.isClose,jdbcType=INTEGER},
      is_delete = #{record.isDelete,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qingmeng.qiuzhidi.model.CmsRecruit">
    update cms_recruit
    <set>
      <if test="recruitName != null">
        recruit_name = #{recruitName,jdbcType=VARCHAR},
      </if>
      <if test="recruitSalary != null">
        recruit_salary = #{recruitSalary,jdbcType=VARCHAR},
      </if>
      <if test="recruitWorkspace != null">
        recruit_workspace = #{recruitWorkspace,jdbcType=VARCHAR},
      </if>
      <if test="releaseDate != null">
        release_date = #{releaseDate,jdbcType=TIMESTAMP},
      </if>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=BIGINT},
      </if>
      <if test="isClose != null">
        is_close = #{isClose,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="jobDescription != null">
        job_description = #{jobDescription,jdbcType=LONGVARCHAR},
      </if>
      <if test="skillRequired != null">
        skill_required = #{skillRequired,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.qingmeng.qiuzhidi.model.CmsRecruit">
    update cms_recruit
    set recruit_name = #{recruitName,jdbcType=VARCHAR},
      recruit_salary = #{recruitSalary,jdbcType=VARCHAR},
      recruit_workspace = #{recruitWorkspace,jdbcType=VARCHAR},
      release_date = #{releaseDate,jdbcType=TIMESTAMP},
      department = #{department,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      company_id = #{companyId,jdbcType=BIGINT},
      is_close = #{isClose,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=INTEGER},
      job_description = #{jobDescription,jdbcType=LONGVARCHAR},
      skill_required = #{skillRequired,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qingmeng.qiuzhidi.model.CmsRecruit">
    update cms_recruit
    set recruit_name = #{recruitName,jdbcType=VARCHAR},
      recruit_salary = #{recruitSalary,jdbcType=VARCHAR},
      recruit_workspace = #{recruitWorkspace,jdbcType=VARCHAR},
      release_date = #{releaseDate,jdbcType=TIMESTAMP},
      department = #{department,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      company_id = #{companyId,jdbcType=BIGINT},
      is_close = #{isClose,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>